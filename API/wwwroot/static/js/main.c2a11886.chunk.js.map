{"version":3,"sources":["app/models/pagination.ts","app/util/Util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/ConfigureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummery.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/login.tsx","features/account/register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppCheckBox.tsx","app/components/AppTextInput.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/CheckoutValidation.tsx","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","console","log","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","addMatcher","isAnyOf","actions","singInUser","thunkApi","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","singOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParamas","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","item","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","component","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProdcuctSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","theme","createTheme","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","ThemeProvider","maxWidth","flexDirection","CssBaseline","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppCheckbox","field","useController","defaultValue","AppTextInput","fieldState","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","typeError","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","palette","background","default","hideProgressBar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2a11886.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n  }\r\n\r\n\r\nexport function currencyFormat(amount: number){\r\n\r\n  return '$' + (amount/100).toFixed(2);\r\n\r\n}  ","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/Util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle',\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\r\n    'basket/addBasketItemAsync',\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, { productId: number, quantity: number, name?: string }>(\r\n    'basket/removeBasketItemAsync',\r\n    async ({ productId, quantity }, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity)\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n)\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            console.log(action)\r\n            state.status = \"pendingAddItem\" + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg;\r\n\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n\r\n            if (state.basket?.items[itemIndex].quantity === 0) state.basket.items.splice(itemIndex, 1);\r\n\r\n            state.status = 'idle';\r\n\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action);\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        });\r\n\r\n    })\r\n})\r\n\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const singInUser = createAsyncThunk<User, FieldValues >(\r\n    'account/signInUser',\r\n    async (data, thunkApi) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const {basket, ...user} = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkApi) => {\r\n        thunkApi.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const {basket, ...user} = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data })\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem('user')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        singOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/');\r\n        },\r\n        setUser: (state,action) => {\r\n            state.user = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) =>{\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired - please login again ');\r\n            history.push('/');\r\n        })\r\n        builder.addMatcher(isAnyOf(singInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) =>{\r\n            state.user = action.payload;\r\n        });\r\n        builder.addMatcher(isAnyOf(singInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        })\r\n    })\r\n})\r\n\r\n\r\nexport const {singOut, setUser} = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/ConfigureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParamas(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n\r\n    params.append('pageNumber', productParams.pageNumber.toString());\r\n    params.append('pageSize', productParams.pageSize.toString());\r\n    params.append('orderBy', productParams.orderBy);\r\n\r\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\r\n\r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, { state: RootState }>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParamas(thunkAPI.getState().catalog.productParams)\r\n        try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData));\r\n            return response.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n\r\n    'catalog/fetchFilters',\r\n    async (_, thunkApi) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: [],\r\n    }\r\n}\r\n\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1 }\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = { ...state.productParams, ...action.payload }\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct';\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendigFetchFilters';\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = \"idle\";\r\n            console.log(action.payload);\r\n        })\r\n    })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber } = catalogSlice.actions;","// I made this only for learning how to use the Redux\r\n//\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport interface CounterState{\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState : CounterState = {\r\n    data: 42,\r\n    title: 'YARC (something redux with redux toolkit )'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        }\r\n    }\r\n}) \r\n\r\n\r\nexport const {increment,decrement} = counterSlice.actions;\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer \r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector : TypedUseSelectorHook<RootState> = useSelector;\r\n","import axios, { AxiosResponse, AxiosError } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/ConfigureStore\";\r\n\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500))\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n//the browser wiil recive a cookie and it will set the cookie inside my appliction storage\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV ==='development') await sleep();\r\n\r\n    const pagination = response.headers['pagination'];\r\n\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n        return response;\r\n    }\r\n\r\n    return response;\r\n\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: { error: data }\r\n            })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\n\r\nconst requests = {\r\n\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, { params }).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters')\r\n\r\n}\r\n\r\nconst TestErrors = {\r\n\r\n    get400Error: () => requests.get('buggy/bad-request'),\r\n    get401Error: () => requests.get('buggy/unauthorised'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress'),\r\n\r\n\r\n}\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post('orders',values)\r\n\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n}\r\n\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n\r\n}\r\n\r\nexport default agent;\r\n","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage(){\r\n\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n    function getValidationError(){\r\n        agent.TestErrors.getValidationError()\r\n        .then(() => console.log('should not see this'))\r\n        .catch(error => setValidationErrors(error));\r\n    }\r\n    \r\n    return(\r\n        <Container>\r\n            <Typography gutterBottom variant=\"h2\"> Errors for testing </Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error </Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error </Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error </Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error </Button>\r\n                <Button variant=\"contained\" onClick={getValidationError}>Test Validation error </Button>\r\n            </ButtonGroup>\r\n             {validationErrors.length > 0 && \r\n                <Alert severity=\"error\">\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n             }\r\n        </Container>\r\n    )\r\n}","import { Box, Typography, Pagination } from \"@mui/material\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({ metaData, onPageChange }: Props) {\r\n\r\n    const { currentPage, totalCount, totalPages, pageSize } = metaData\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n            <Typography>\r\n                Displaying {(currentPage - 1) * pageSize + 1}-\r\n                {currentPage * pageSize > totalCount\r\n                    ? totalCount : currentPage * pageSize} of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color='secondary'\r\n                size='large'\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={(e, page) => onPageChange(page)}\r\n            />\r\n        </Box>\r\n    )\r\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props{\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[] ) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({items, checked, onChange}: Props){\r\n\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n    \r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value)\r\n        let newChecked: string[] = [];\r\n        if (currentIndex === - 1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter(item => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup >\r\n            {items.map(item => (\r\n                <FormControlLabel \r\n                control={<Checkbox\r\n                    checked={checkedItems.indexOf(item) !== -1}\r\n                    onClick={() => handleChecked(item)}\r\n                />} \r\n                label={item} \r\n                key={item}/>\r\n            ))}\r\n        </FormGroup>\r\n    )\r\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n\r\ninterface Props{\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({options,onChange,selectedValue}:Props){\r\n    return(\r\n        <FormControl>\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n            {options.map(({value, label }) => (\r\n                <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\n interface Props{\r\n     message?: string;\r\n }\r\n\r\nexport default function LoadingComponent({message ='Loading...' }:Props){\r\n\r\n    return(\r\n\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh' >\r\n                <CircularProgress size={100} color='secondary'/>\r\n                <Typography variant='h4' sx={{justifyContent:'center', position:'fixed',top: '60%' }}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n\r\n    )\r\n\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { currencyFormat } from \"../../app/util/Util\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\n\r\ninterface Props {\r\n    product: Product\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\">\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({ productId: product.id }))}\r\n                    size=\"small\">\r\n                    Add to cart\r\n                </LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4} >\r\n            {products.map(product => (\r\n                <Grid item xs={4} key={product.id}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : (\r\n                        <   ProductCard product={product} />\r\n                    )}\r\n\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProdcuctSearch(){\r\n\r\n    const {productParams} = useAppSelector(state => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({searchTerm: event.target.value}))\r\n    },1000)\r\n\r\n    return (\r\n        \r\n    <TextField\r\n        label='Search products'\r\n        variant = 'outlined'\r\n        fullWidth\r\n        value={searchTerm || ''}\r\n        onChange={(event: any) =>{\r\n            setSearchTerm(event.target.value);\r\n            debouncedSearch(event)\r\n        }}\r\n    />\r\n\r\n    )\r\n}","import { Grid, Paper } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProdcuctSearch from \"./ProductSearch\";\r\n\r\n\r\nconst sortOptions = [\r\n    { value: 'name', label: 'Alphabetical' },\r\n    { value: 'priceDesc', label: 'Price - High to low' },\r\n    { value: 'price', label: 'Price - Low to high' },\r\n\r\n]\r\n\r\n\r\nexport default function Catalog() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n\r\n    }, [productsLoaded, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [dispatch, filtersLoaded])\r\n\r\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProdcuctSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n\r\n                    />\r\n\r\n                </Paper>\r\n\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\r\n\r\n                    />\r\n                </Paper>\r\n\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\r\n\r\n                    />\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n\r\n            <Grid item xs={3} />\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {metaData &&\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n                    />}\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound(){\r\n    return ( \r\n        <Container component={Paper} sx={{height: 400}}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}","import { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../app/errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { currencyFormat } from \"../../app/util/Util\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails(){\r\n\r\n    const {basket, status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const {id} = useParams<{id: string}>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\r\n    const {status: productStatus} = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if(item) setQuantity(item.quantity);\r\n        if(!product) dispatch(fetchProductAsync(parseInt(id)));\r\n    }, [id,item, dispatch, product])\r\n\r\n    function handleInputChange(event: any   ){\r\n        if (event.target.value >=0){\r\n            setQuantity(parseInt(event.target.value))\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart(){\r\n\r\n        if (!item || quantity > item.quantity){\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\r\n        }\r\n    }\r\n\r\n    if(productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\r\n\r\n    if(!product) return <NotFound/>;\r\n\r\n    return(\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{width: '100%'}} />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"h3\">{product.name}</Typography>\r\n                <Divider sx={{mb:2}}/>\r\n                <Typography variant=\"h4\" color='secondary'>{currencyFormat(product.price)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField \r\n                            onChange={handleInputChange}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        /> \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={(item?.quantity === quantity) || (!item && quantity === 0)}\r\n                            loading={status.includes('pending')}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{height: '55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Cart' }\r\n                        </LoadingButton>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\n// I made this only for learning how to use the Redux\r\n//\r\nexport default function ContactPage(){\r\n    const dispatch = useAppDispatch();\r\n    const {data,title} = useAppSelector(state => state.counter)\r\n    return(\r\n        <>\r\n\r\n        <Typography variant=\"h2\">\r\n            {title}\r\n        </Typography>\r\n        <Typography variant=\"h5\">\r\n            the data is: {data}\r\n        </Typography>\r\n\r\n        <ButtonGroup>\r\n            <Button onClick={()=> dispatch(decrement(1))} variant='contained' color='error'> Decrement </Button>\r\n            <Button onClick={()=> dispatch(increment(1))} variant='contained' color='primary'> Increment </Button>\r\n            <Button onClick={()=> dispatch(increment(5))} variant='contained' color='secondary'> Increment by 5 </Button>\r\n        </ButtonGroup>\r\n         \r\n        </>\r\n\r\n    )\r\n //   \r\n}","import { Box, Typography } from \"@mui/material\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"images/hero1.jpg\" alt=\"hero\" style={{ display: \"block\", width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"images/hero2.jpg\" alt=\"hero\" style={{ display: \"block\", width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"images/hero3.jpg\" alt=\"hero\" style={{ display: \"block\", width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n            </Slider>\r\n            <Box display=\"flex\" justifyContent='center' sx={{p:4}}>\r\n                <Typography variant=\"h1\">\r\n                    Welcome to the shop!\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Fade from '@mui/material/Fade';\r\nimport { useAppDispatch, useAppSelector } from '../store/ConfigureStore';\r\nimport { singOut } from '../../features/account/accountSlice';\r\nimport { clearBasket } from '../../features/basket/basketSlice';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignedInMenu() {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const { user } = useAppSelector(state => state.account);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: 'h6' }}\r\n\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='/orders'>My orders</MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    dispatch(singOut());\r\n                    dispatch(clearBasket());\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/ConfigureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' },\r\n]\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' },\r\n\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0)\r\n    return (\r\n        <AppBar position='static' >\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography\r\n                        variant='h6'\r\n                        component={NavLink}\r\n                        to='/' exact\r\n                        sx={navStyles}>\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n\r\n                <Box>\r\n                    <List sx={{ display: 'flex' }}>\r\n                        {midLinks.map(({ title, path }) => (\r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyles}\r\n                            >\r\n                                {title.toUpperCase()}\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Box>\r\n\r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles} >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const { state } = useLocation<any>();\r\n\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                    <Divider />\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>Server Error</Typography>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { currencyFormat } from \"../../app/util/Util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n\r\n    //?? which means if what we're returning here is null/undefined then we can return zero instead\r\n    if (subtotal === undefined)\r\n        subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n        \r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: 'italic' }}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, TableHead, TableRow, TableCell, TableBody, Box, Table} from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/ConfigureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket &&\r\n                            <TableCell align=\"right\"></TableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map(item => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display='flex' alignItems='center'>\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: 'rem' }))}\r\n                                        color='error'\r\n                                    >\r\n                                        <Remove />\r\n                                    </LoadingButton>}\r\n                                {item.quantity}\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingAddItem' + item.productId}\r\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                        color='secondary'\r\n                                    >\r\n                                        <Add />\r\n                                    </LoadingButton>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\r\n                            {isBasket &&\r\n                                <TableCell align=\"right\">\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))}\r\n                                        color='error'\r\n                                    >\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n} ","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport BasketSummary from \"./BasketSummery\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\nexport default function BasketPage() {\r\n  const { basket } = useAppSelector(state => state.basket);\r\n\r\n  if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n  return (\r\n    <>\r\n      <BasketTable items={basket.items} />\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n          <Button\r\n            component={Link}\r\n            to='/checkout'\r\n            variant='contained'\r\n            size='large'\r\n            fullWidth\r\n          >\r\n            Checkout\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n\r\n  )\r\n\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/ConfigureStore';\r\nimport { singInUser } from './accountSlice';\r\n\r\n\r\nconst theme = createTheme();\r\n\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    })\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(singInUser(data))\r\n            history.push(location.state?.from?.pathname ||'/catalog');\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component={Paper} maxWidth=\"sm\"\r\n                sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n                <CssBaseline />\r\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Username\"\r\n                        autoFocus\r\n                        {...register('username', { required: \"Username is required\" })}\r\n                        error={!!errors.username}\r\n                        helperText={errors?.username?.message}\r\n\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        {...register('password', { required: \"Password is required\" })}\r\n                        error={!!errors.password}\r\n                        helperText={errors?.password?.message}\r\n\r\n                    />\r\n                    <LoadingButton\r\n                        loading={isSubmitting}\r\n                        disabled={!isValid}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                    >\r\n                        Sign In\r\n                    </LoadingButton>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link to='/register' >\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst theme = createTheme();\r\n\r\n\r\n\r\nexport default function Register() {\r\n\r\n    const history = useHistory();\r\n    const { register, handleSubmit,setError, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    })\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes('Password')) {\r\n                    setError('password', { message: error })\r\n                } else if (error.includes('Email')) {\r\n                    setError('email', { message: error })\r\n                } else if (error.includes('Username')) {\r\n                    setError('username', { message: error })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component={Paper} maxWidth=\"sm\"\r\n                sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n                <CssBaseline />\r\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register\r\n                </Typography>\r\n                <Box component=\"form\"\r\n                    onSubmit={handleSubmit((data) =>\r\n                        agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success('Registration successful - you can now login ');\r\n                            history.push('/login');\r\n                        })\r\n                        .catch(error => handleApiErrors(error)))\r\n                    }\r\n                    noValidate sx={{ mt: 1 }}\r\n                >\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Username\"\r\n                        autoFocus\r\n                        {...register('username', { required: \"Username is required\" })}\r\n                        error={!!errors.username}\r\n                        helperText={errors?.username?.message}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Email address\"\r\n                        {...register('email', { \r\n                            required: \"Email address is required\", \r\n                            pattern: {\r\n                                value: /^[\\w.=-]+@[\\w.-]+\\.[\\w]{2,3}$/,\r\n                                message: 'Not a valid email address'\r\n                            }\r\n                        })}\r\n                        error={!!errors.email}\r\n                        helperText={errors?.email?.message}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        {...register('password', { \r\n                            required: \"Password is required\",\r\n                            pattern: {\r\n                                value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                                message: 'password does not meet complexity requirements'   \r\n                            } \r\n                        \r\n                        })}\r\n                        error={!!errors.password}\r\n                        helperText={errors?.password?.message}\r\n\r\n                    />\r\n                    <LoadingButton\r\n                        loading={isSubmitting}\r\n                        disabled={!isValid}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                    >\r\n                        Register\r\n                    </LoadingButton>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link to='/login' >\r\n                                {\"Already have an account ? Sign In\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import { ComponentType } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useAppSelector } from \"../store/ConfigureStore\";\r\n\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const {user} = useAppSelector(state => state.account);\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          user ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummery\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\r\n            </Box>\r\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n} ","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/Util\";\r\nimport OrderDetailed from \"./OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading orders...\" />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetailed \r\n            order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n            setSelectedOrder={setSelectedOrderNumber}\r\n        />\r\n    )\r\n\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order number</TableCell>\r\n                        <TableCell align=\"right\">Total</TableCell>\r\n                        <TableCell align=\"right\">Order Date</TableCell>\r\n                        <TableCell align=\"right\">Order Status</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"order\">\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>View</Button>\r\n                            </TableCell>\r\n\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    )\r\n\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\"\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const {field} = useController({...props, defaultValue: false});\r\n    return (\r\n        <FormControlLabel \r\n            control={\r\n                <Checkbox \r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n} ","import { TextField } from \"@mui/material\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: '' })\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n\r\n        />\r\n\r\n\r\n    )\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppCheckbox from '../../app/components/AppCheckBox';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\n\r\nexport default function AddressForm() {\r\n\r\n    const { control, formState } = useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='fullName' label='Full name' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address1' label='Address line 1' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address2' label='Address line 2' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label='City' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='state' label='State' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label='Zipcode' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='country' label='Country' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox \r\n                        disabled={!formState.isDirty}\r\n                        name='saveAddress' \r\n                        label='Save this as the default address' \r\n                        control={control} \r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, \r\n    ref: Ref<unknown>){\r\n        const elementRef = useRef<any>();\r\n\r\n        useImperativeHandle(ref, () => ({\r\n            focus: () => elementRef.current.focus\r\n        }));\r\n\r\n        return (\r\n            <Component \r\n                onReady={(element: any) => elementRef.current = element}\r\n                {...props}\r\n            />\r\n        )\r\n    }); ","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n  cardState: { elementError: { [key in StripeElementType]?: string } };\r\n  onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/ConfigureStore';\r\nimport BasketSummary from '../basket/BasketSummery';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n  const { basket } = useAppSelector(state => state.basket);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n        <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is required'),\r\n        address1: yup.string().required('Address line 1  is required'),\r\n        address2: yup.string().required('Address line 2  is required'),\r\n        city: yup.string().required(),\r\n        state: yup.string().required(),\r\n        zip: yup.number().typeError('You must specify a number').required(),\r\n        country: yup.string().required('Address line 3  is required'),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n\r\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport agent from \"../../app/api/agent\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { validationSchema } from \"./CheckoutValidation\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} });\r\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false });\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message\r\n            }\r\n        })\r\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\r\n                }\r\n            })\r\n    }, [methods])\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardCvc\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardNumber\r\n                || !methods.formState.isValid\r\n        } else {\r\n            return !methods.formState.isValid\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack}>\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n\r\n    );\r\n}","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/ConfigureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51KriRcAZSYUplzGNIHy72iuy9aLtUhJoGfViEpfDvGpNLnFVmOiIE7XESWQeDfiyCFFnAjSluT2P0HrKkPo7HtMY002N84EXLl\")\r\n\r\nexport default function CheckoutWrapper() \r\n{\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message='Loading checkout...'/>\r\n    \r\n    return(\r\n       <Elements stripe={stripePromise}>\r\n           <CheckoutPage />\r\n       </Elements> \r\n    )\r\n}","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport AboutPage from \"../../features/about/AboutPage\";\r\nimport Catalog from \"../../features/catalog/Catalog\";\r\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\r\nimport ContactPage from \"../../features/contact/ContactPage\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport Header from \"./Header\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ServerError from \"../errors/ServerError\";\r\nimport NotFound from \"../errors/NotFound\";\r\nimport BasketPage from \"../../features/basket/BasketPage\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport { useAppDispatch } from \"../store/ConfigureStore\";\r\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\r\nimport Login from \"../../features/account/login\";\r\nimport Register from \"../../features/account/register\";\r\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Orders from \"../../features/orders/Orders\";\r\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const initApp = useCallback(async () => {\r\n    try {\r\n      await dispatch(fetchCurrentUser());\r\n      await dispatch(fetchBasketAsync());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    initApp().then(() => setLoading(false));\r\n  }, [initApp])\r\n\r\n\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const paletteType = darkMode ? 'dark' : 'light'\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: paletteType,\r\n      background: {\r\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\r\n      }\r\n    }\r\n  })\r\n\r\n  function handleThemeChange() {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  if (loading) return <LoadingComponent message='Initialising app...' />\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastContainer position=\"bottom-right\" theme=\"colored\" hideProgressBar />\r\n      <CssBaseline />\r\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route path={'/(.+)'} render={() => (\r\n        <Container sx={{ mt: 4 }}>\r\n          <Switch>\r\n            <Route exact path='/catalog' component={Catalog} />\r\n            <Route path='/catalog/:id' component={ProductDetails} />\r\n            <Route path='/about' component={AboutPage} />\r\n            <Route path='/contact' component={ContactPage} />\r\n            <Route path='/server-error' component={ServerError} />\r\n            <Route path='/basket' component={BasketPage} />\r\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\r\n            <PrivateRoute path='/orders' component={Orders} />\r\n            <Route path='/login' component={Login} />\r\n            <Route path='/register' component={Register} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Container>\r\n\r\n      )} />\r\n\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store/ConfigureStore';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}