{"version":3,"sources":["app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","app/models/pagination.ts","app/api/agent.ts","app/util/Util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","app/store/ConfigureStore.ts","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummery.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/login.tsx","features/account/register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppCheckBox.tsx","app/components/AppTextInput.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/CheckoutValidation.tsx","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppPagination","metaData","onPageChange","currentPage","totalCount","totalPages","pageSize","Box","display","justifyContent","alignItems","Typography","Pagination","color","size","count","page","onChange","e","CheckboxButtons","items","checked","useState","checkedItems","setCheckedItems","FormGroup","map","item","FormControlLabel","control","Checkbox","indexOf","onClick","value","newChecked","findIndex","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","variant","sx","position","top","PaginatedResponse","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","data","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","pagination","JSON","parse","error","status","errors","modelStateErrors","key","push","flat","toast","title","history","pathname","state","Promise","reject","requests","url","params","get","then","body","post","delete","Basket","addItem","productId","quantity","removeItem","agent","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","createSlice","name","initialState","basket","reducers","setBasket","action","payload","clearBasket","extraReducers","builder","addCase","pending","console","log","meta","arg","fulfilled","itemIndex","i","undefined","splice","rejected","addMatcher","isAnyOf","actions","singInUser","thunkApi","userDto","dispatch","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","singOut","productsAdapter","createEntityAdapter","getAxiosParamas","productParams","URLSearchParams","append","pageNumber","toString","orderBy","searchTerm","brands","length","types","fetchProductsAsync","catalog","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","type","CardActions","LoadingButton","loading","includes","Button","component","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProdcuctSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","fullWidth","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","NotFound","Container","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","List","ListItem","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","theme","createTheme","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","ThemeProvider","maxWidth","flexDirection","CssBaseline","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","catch","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppCheckbox","field","useController","defaultValue","AppTextInput","fieldState","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","Compononent","useTheme","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","base","palette","text","primary","fontSize","fontFamily","alpha","invalid","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","typeError","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","a","setDarkMode","paletteType","background","default","hideProgressBar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e7e35fc2.chunk.js","sourcesContent":["import { Box, Typography, Pagination } from \"@mui/material\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({ metaData, onPageChange }: Props) {\r\n\r\n    const { currentPage, totalCount, totalPages, pageSize } = metaData\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n            <Typography>\r\n                Displaying {(currentPage - 1) * pageSize + 1}-\r\n                {currentPage * pageSize > totalCount\r\n                    ? totalCount : currentPage * pageSize} of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color='secondary'\r\n                size='large'\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={(e, page) => onPageChange(page)}\r\n            />\r\n        </Box>\r\n    )\r\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props{\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[] ) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({items, checked, onChange}: Props){\r\n\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n    \r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value)\r\n        let newChecked: string[] = [];\r\n        if (currentIndex === - 1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter(item => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup >\r\n            {items.map(item => (\r\n                <FormControlLabel \r\n                control={<Checkbox\r\n                    checked={checkedItems.indexOf(item) !== -1}\r\n                    onClick={() => handleChecked(item)}\r\n                />} \r\n                label={item} \r\n                key={item}/>\r\n            ))}\r\n        </FormGroup>\r\n    )\r\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n\r\ninterface Props{\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({options,onChange,selectedValue}:Props){\r\n    return(\r\n        <FormControl>\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n            {options.map(({value, label }) => (\r\n                <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\n interface Props{\r\n     message?: string;\r\n }\r\n\r\nexport default function LoadingComponent({message ='Loading...' }:Props){\r\n\r\n    return(\r\n\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh' >\r\n                <CircularProgress size={100} color='secondary'/>\r\n                <Typography variant='h4' sx={{justifyContent:'center', position:'fixed',top: '60%' }}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n\r\n    )\r\n\r\n}","export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","import axios, { AxiosResponse, AxiosError } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/ConfigureStore\";\r\n\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500))\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n//the browser wiil recive a cookie and it will set the cookie inside my appliction storage\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV ==='development') await sleep();\r\n\r\n    const pagination = response.headers['pagination'];\r\n\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n        return response;\r\n    }\r\n\r\n    return response;\r\n\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: { error: data }\r\n            })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\n\r\nconst requests = {\r\n\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, { params }).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters')\r\n\r\n}\r\n\r\nconst TestErrors = {\r\n\r\n    get400Error: () => requests.get('buggy/bad-request'),\r\n    get401Error: () => requests.get('buggy/unauthorised'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress'),\r\n\r\n\r\n}\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post('orders',values)\r\n\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n}\r\n\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n\r\n}\r\n\r\nexport default agent;\r\n","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n  }\r\n\r\n\r\nexport function currencyFormat(amount: number){\r\n\r\n  return '$' + (amount/100).toFixed(2);\r\n\r\n}  ","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/Util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle',\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\r\n    'basket/addBasketItemAsync',\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, { productId: number, quantity: number, name?: string }>(\r\n    'basket/removeBasketItemAsync',\r\n    async ({ productId, quantity }, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity)\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n)\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            console.log(action)\r\n            state.status = \"pendingAddItem\" + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg;\r\n\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n\r\n            if (state.basket?.items[itemIndex].quantity === 0) state.basket.items.splice(itemIndex, 1);\r\n\r\n            state.status = 'idle';\r\n\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action);\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        });\r\n\r\n    })\r\n})\r\n\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const singInUser = createAsyncThunk<User, FieldValues >(\r\n    'account/signInUser',\r\n    async (data, thunkApi) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const {basket, ...user} = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkApi) => {\r\n        thunkApi.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const {basket, ...user} = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data })\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem('user')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        singOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/');\r\n        },\r\n        setUser: (state,action) => {\r\n            state.user = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) =>{\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired - please login again ');\r\n            history.push('/');\r\n        })\r\n        builder.addMatcher(isAnyOf(singInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) =>{\r\n            state.user = action.payload;\r\n        });\r\n        builder.addMatcher(isAnyOf(singInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        })\r\n    })\r\n})\r\n\r\n\r\nexport const {singOut, setUser} = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/ConfigureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParamas(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n\r\n    params.append('pageNumber', productParams.pageNumber.toString());\r\n    params.append('pageSize', productParams.pageSize.toString());\r\n    params.append('orderBy', productParams.orderBy);\r\n\r\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\r\n\r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, { state: RootState }>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParamas(thunkAPI.getState().catalog.productParams)\r\n        try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData));\r\n            return response.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n\r\n    'catalog/fetchFilters',\r\n    async (_, thunkApi) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: [],\r\n    }\r\n}\r\n\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1 }\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = { ...state.productParams, ...action.payload }\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct';\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendigFetchFilters';\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = \"idle\";\r\n            console.log(action.payload);\r\n        })\r\n    })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber } = catalogSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer \r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector : TypedUseSelectorHook<RootState> = useSelector;\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { currencyFormat } from \"../../app/util/Util\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\n\r\ninterface Props {\r\n    product: Product\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\">\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({ productId: product.id }))}\r\n                    size=\"small\">\r\n                    Add to cart\r\n                </LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4} >\r\n            {products.map(product => (\r\n                <Grid item xs={4} key={product.id}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : (\r\n                        <   ProductCard product={product} />\r\n                    )}\r\n\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProdcuctSearch(){\r\n\r\n    const {productParams} = useAppSelector(state => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({searchTerm: event.target.value}))\r\n    },1000)\r\n\r\n    return (\r\n        \r\n    <TextField\r\n        label='Search products'\r\n        variant = 'outlined'\r\n        fullWidth\r\n        value={searchTerm || ''}\r\n        onChange={(event: any) =>{\r\n            setSearchTerm(event.target.value);\r\n            debouncedSearch(event)\r\n        }}\r\n    />\r\n\r\n    )\r\n}","import { Grid, Paper } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProdcuctSearch from \"./ProductSearch\";\r\n\r\n\r\nconst sortOptions = [\r\n    { value: 'name', label: 'Alphabetical' },\r\n    { value: 'priceDesc', label: 'Price - High to low' },\r\n    { value: 'price', label: 'Price - Low to high' },\r\n\r\n]\r\n\r\n\r\nexport default function Catalog() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n\r\n    }, [productsLoaded, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [dispatch, filtersLoaded])\r\n\r\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProdcuctSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n\r\n                    />\r\n\r\n                </Paper>\r\n\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\r\n\r\n                    />\r\n                </Paper>\r\n\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\r\n\r\n                    />\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n\r\n            <Grid item xs={3} />\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {metaData &&\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n                    />}\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound(){\r\n    return ( \r\n        <Container component={Paper} sx={{height: 400}}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}","import { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../app/errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { currencyFormat } from \"../../app/util/Util\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails(){\r\n\r\n    const {basket, status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const {id} = useParams<{id: string}>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\r\n    const {status: productStatus} = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if(item) setQuantity(item.quantity);\r\n        if(!product) dispatch(fetchProductAsync(parseInt(id)));\r\n    }, [id,item, dispatch, product])\r\n\r\n    function handleInputChange(event: any   ){\r\n        if (event.target.value >=0){\r\n            setQuantity(parseInt(event.target.value))\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart(){\r\n\r\n        if (!item || quantity > item.quantity){\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\r\n        }\r\n    }\r\n\r\n    if(productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\r\n\r\n    if(!product) return <NotFound/>;\r\n\r\n    return(\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{width: '100%'}} />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"h3\">{product.name}</Typography>\r\n                <Divider sx={{mb:2}}/>\r\n                <Typography variant=\"h4\" color='secondary'>{currencyFormat(product.price)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField \r\n                            onChange={handleInputChange}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        /> \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={(item?.quantity === quantity) || (!item && quantity === 0)}\r\n                            loading={status.includes('pending')}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{height: '55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Cart' }\r\n                        </LoadingButton>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Box, Typography } from \"@mui/material\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"images/hero1.jpg\" alt=\"hero\" style={{ display: \"block\", width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"images/hero2.jpg\" alt=\"hero\" style={{ display: \"block\", width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"images/hero3.jpg\" alt=\"hero\" style={{ display: \"block\", width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n            </Slider>\r\n            <Box display=\"flex\" justifyContent='center' sx={{p:4}}>\r\n                <Typography variant=\"h1\">\r\n                    Welcome to the shop!\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Fade from '@mui/material/Fade';\r\nimport { useAppDispatch, useAppSelector } from '../store/ConfigureStore';\r\nimport { singOut } from '../../features/account/accountSlice';\r\nimport { clearBasket } from '../../features/basket/basketSlice';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignedInMenu() {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const { user } = useAppSelector(state => state.account);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: 'h6' }}\r\n\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='/orders'>My orders</MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    dispatch(singOut());\r\n                    dispatch(clearBasket());\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/ConfigureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n]\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' },\r\n\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0)\r\n    return (\r\n        <AppBar position='static' >\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography\r\n                        variant='h6'\r\n                        component={NavLink}\r\n                        to='/' exact\r\n                        sx={navStyles}>\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n\r\n                <Box>\r\n                    <List sx={{ display: 'flex' }}>\r\n                        {midLinks.map(({ title, path }) => (\r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyles}\r\n                            >\r\n                                {title.toUpperCase()}\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Box>\r\n\r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles} >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const { state } = useLocation<any>();\r\n\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                    <Divider />\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>Server Error</Typography>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport { currencyFormat } from \"../../app/util/Util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n\r\n    //?? which means if what we're returning here is null/undefined then we can return zero instead\r\n    if (subtotal === undefined)\r\n        subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n        \r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: 'italic' }}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, TableHead, TableRow, TableCell, TableBody, Box, Table} from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/ConfigureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket &&\r\n                            <TableCell align=\"right\"></TableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map(item => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display='flex' alignItems='center'>\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: 'rem' }))}\r\n                                        color='error'\r\n                                    >\r\n                                        <Remove />\r\n                                    </LoadingButton>}\r\n                                {item.quantity}\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingAddItem' + item.productId}\r\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                        color='secondary'\r\n                                    >\r\n                                        <Add />\r\n                                    </LoadingButton>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\r\n                            {isBasket &&\r\n                                <TableCell align=\"right\">\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))}\r\n                                        color='error'\r\n                                    >\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n} ","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport BasketSummary from \"./BasketSummery\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../app/store/ConfigureStore\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\nexport default function BasketPage() {\r\n  const { basket } = useAppSelector(state => state.basket);\r\n\r\n  if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n  return (\r\n    <>\r\n      <BasketTable items={basket.items} />\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n          <Button\r\n            component={Link}\r\n            to='/checkout'\r\n            variant='contained'\r\n            size='large'\r\n            fullWidth\r\n          >\r\n            Checkout\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n\r\n  )\r\n\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/ConfigureStore';\r\nimport { singInUser } from './accountSlice';\r\n\r\n\r\nconst theme = createTheme();\r\n\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    })\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(singInUser(data))\r\n            history.push(location.state?.from?.pathname ||'/catalog');\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component={Paper} maxWidth=\"sm\"\r\n                sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n                <CssBaseline />\r\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Username\"\r\n                        autoFocus\r\n                        {...register('username', { required: \"Username is required\" })}\r\n                        error={!!errors.username}\r\n                        helperText={errors?.username?.message}\r\n\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        {...register('password', { required: \"Password is required\" })}\r\n                        error={!!errors.password}\r\n                        helperText={errors?.password?.message}\r\n\r\n                    />\r\n                    <LoadingButton\r\n                        loading={isSubmitting}\r\n                        disabled={!isValid}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                    >\r\n                        Sign In\r\n                    </LoadingButton>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link to='/register' >\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst theme = createTheme();\r\n\r\n\r\n\r\nexport default function Register() {\r\n\r\n    const history = useHistory();\r\n    const { register, handleSubmit,setError, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    })\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes('Password')) {\r\n                    setError('password', { message: error })\r\n                } else if (error.includes('Email')) {\r\n                    setError('email', { message: error })\r\n                } else if (error.includes('Username')) {\r\n                    setError('username', { message: error })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component={Paper} maxWidth=\"sm\"\r\n                sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n                <CssBaseline />\r\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register\r\n                </Typography>\r\n                <Box component=\"form\"\r\n                    onSubmit={handleSubmit((data) =>\r\n                        agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success('Registration successful - you can now login ');\r\n                            history.push('/login');\r\n                        })\r\n                        .catch(error => handleApiErrors(error)))\r\n                    }\r\n                    noValidate sx={{ mt: 1 }}\r\n                >\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Username\"\r\n                        autoFocus\r\n                        {...register('username', { required: \"Username is required\" })}\r\n                        error={!!errors.username}\r\n                        helperText={errors?.username?.message}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Email address\"\r\n                        {...register('email', { \r\n                            required: \"Email address is required\", \r\n                            pattern: {\r\n                                value: /^[\\w.=-]+@[\\w.-]+\\.[\\w]{2,3}$/,\r\n                                message: 'Not a valid email address'\r\n                            }\r\n                        })}\r\n                        error={!!errors.email}\r\n                        helperText={errors?.email?.message}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        {...register('password', { \r\n                            required: \"Password is required\",\r\n                            pattern: {\r\n                                value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                                message: 'password does not meet complexity requirements'   \r\n                            } \r\n                        \r\n                        })}\r\n                        error={!!errors.password}\r\n                        helperText={errors?.password?.message}\r\n\r\n                    />\r\n                    <LoadingButton\r\n                        loading={isSubmitting}\r\n                        disabled={!isValid}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                    >\r\n                        Register\r\n                    </LoadingButton>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link to='/login' >\r\n                                {\"Already have an account ? Sign In\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import { ComponentType } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useAppSelector } from \"../store/ConfigureStore\";\r\n\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const {user} = useAppSelector(state => state.account);\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          user ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummery\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\r\n            </Box>\r\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n} ","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/Util\";\r\nimport OrderDetailed from \"./OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading orders...\" />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetailed \r\n            order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n            setSelectedOrder={setSelectedOrderNumber}\r\n        />\r\n    )\r\n\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order number</TableCell>\r\n                        <TableCell align=\"right\">Total</TableCell>\r\n                        <TableCell align=\"right\">Order Date</TableCell>\r\n                        <TableCell align=\"right\">Order Status</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"order\">\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>View</Button>\r\n                            </TableCell>\r\n\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    )\r\n\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\"\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const {field} = useController({...props, defaultValue: false});\r\n    return (\r\n        <FormControlLabel \r\n            control={\r\n                <Checkbox \r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n} ","import { TextField } from \"@mui/material\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: '' })\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n\r\n        />\r\n\r\n\r\n    )\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppCheckbox from '../../app/components/AppCheckBox';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\n\r\nexport default function AddressForm() {\r\n\r\n    const { control, formState } = useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='fullName' label='Full name' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address1' label='Address line 1' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address2' label='Address line 2' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label='City' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='state' label='State' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label='Zipcode' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='country' label='Country' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox \r\n                        disabled={!formState.isDirty}\r\n                        name='saveAddress' \r\n                        label='Save this as the default address' \r\n                        control={control} \r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { alpha, InputBaseComponentProps, useTheme } from '@mui/material';\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from 'react';\r\n \r\nexport const StripeInput = forwardRef(function StripeInput(\r\n  { component: Compononent, options, ...props }: InputBaseComponentProps,\r\n  ref: Ref<unknown>\r\n) {\r\n  const theme = useTheme();\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const elementRef = useRef<any>();\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => elementRef.current.focus,\r\n  }));\r\n  return (\r\n    <Compononent\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      onReady={(element: any) => (elementRef.current = element)}\r\n      options={{\r\n        ...options,\r\n        style: {\r\n          base: {\r\n            color: theme.palette.text.primary,\r\n            fontSize: `${theme.typography.fontSize}px`,\r\n            fontFamily: theme.typography.fontFamily,\r\n            '::placeholder': {\r\n              color: alpha(theme.palette.text.primary, 0.42),\r\n            },\r\n          },\r\n          invalid: {\r\n            color: theme.palette.text.primary,\r\n          },\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n  cardState: { elementError: { [key in StripeElementType]?: string } };\r\n  onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/ConfigureStore';\r\nimport BasketSummary from '../basket/BasketSummery';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n  const { basket } = useAppSelector(state => state.basket);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n        <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is required'),\r\n        address1: yup.string().required('Address line 1  is required'),\r\n        address2: yup.string().required('Address line 2  is required'),\r\n        city: yup.string().required(),\r\n        state: yup.string().required(),\r\n        zip: yup.number().typeError('You must specify a number').required(),\r\n        country: yup.string().required('Address line 3  is required'),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n\r\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport agent from \"../../app/api/agent\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { validationSchema } from \"./CheckoutValidation\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/ConfigureStore\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} });\r\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false });\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message\r\n            }\r\n        })\r\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\r\n                }\r\n            })\r\n    }, [methods])\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardCvc\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardNumber\r\n                || !methods.formState.isValid\r\n        } else {\r\n            return !methods.formState.isValid\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack}>\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n\r\n    );\r\n}","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/ConfigureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51KriRcAZSYUplzGNIHy72iuy9aLtUhJoGfViEpfDvGpNLnFVmOiIE7XESWQeDfiyCFFnAjSluT2P0HrKkPo7HtMY002N84EXLl\")\r\n\r\nexport default function CheckoutWrapper() \r\n{\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message='Loading checkout...'/>\r\n    \r\n    return(\r\n       <Elements stripe={stripePromise}>\r\n           <CheckoutPage />\r\n       </Elements> \r\n    )\r\n}","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Catalog from \"../../features/catalog/Catalog\";\r\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport Header from \"./Header\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ServerError from \"../errors/ServerError\";\r\nimport NotFound from \"../errors/NotFound\";\r\nimport BasketPage from \"../../features/basket/BasketPage\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport { useAppDispatch } from \"../store/ConfigureStore\";\r\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\r\nimport Login from \"../../features/account/login\";\r\nimport Register from \"../../features/account/register\";\r\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Orders from \"../../features/orders/Orders\";\r\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const initApp = useCallback(async () => {\r\n    try {\r\n      await dispatch(fetchCurrentUser());\r\n      await dispatch(fetchBasketAsync());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    initApp().then(() => setLoading(false));\r\n  }, [initApp])\r\n\r\n\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const paletteType = darkMode ? 'dark' : 'light'\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: paletteType,\r\n      background: {\r\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\r\n      }\r\n    }\r\n  })\r\n\r\n  function handleThemeChange() {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  if (loading) return <LoadingComponent message='Initialising app...' />\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastContainer position=\"bottom-right\" theme=\"colored\" hideProgressBar />\r\n      <CssBaseline />\r\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route path={'/(.+)'} render={() => (\r\n        <Container sx={{ mt: 4 }}>\r\n          <Switch>\r\n            <Route exact path='/catalog' component={Catalog} />\r\n            <Route path='/catalog/:id' component={ProductDetails} />\r\n            <Route path='/server-error' component={ServerError} />\r\n            <Route path='/basket' component={BasketPage} />\r\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\r\n            <PrivateRoute path='/orders' component={Orders} />\r\n            <Route path='/login' component={Login} />\r\n            <Route path='/register' component={Register} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Container>\r\n\r\n      )} />\r\n\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store/ConfigureStore';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}